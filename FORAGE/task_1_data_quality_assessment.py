# -*- coding: utf-8 -*-
"""Task 1 : Data Quality Assessment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lTQiTBxwo4X9TukpI1gVyzzsvlbq23In
"""



"""LIBRARIES:"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt



"""IMPORTING DATA SETS"""

ca=pd.read_csv('/content/drive/MyDrive/Data Science/customeraddress.csv')
cd=pd.read_csv('/content/drive/MyDrive/Data Science/customerdemographic.csv')
ad=pd.read_csv('/content/drive/MyDrive/Data Science/transactions.csv')

"""DATA CLEANING OF CUSTOMER ADDRES DATA SET"""

#customer data set
ca

#customer_id column is unncessary here, so we will drop this column
ca=ca.drop(columns=['customer_id']) #This code should delete the column, now we again check the data

ca

#for analysis all the numeric and categorical data must be separates here we see that adress column  has both. so we will
#split this column in street number and Address.
ca[['street number', 'Address']] = ca['address'].str.split(n=1, expand=True)

ca

#address column is unneccessary we will dop it
ca2=ca.drop(columns=['address'])

ca2

#To check any empty cells
ca2.isnull().sum()
#result show there is no  null value

#To check any duplicat value
ca2.duplicated().sum()
#result shows that there is no duplicate value

#For consistency we check all the data types
ca2.dtypes
#result shows that data types are consistent with the columns

# Check for outliers
target= ca2['property_valuation']

# Create a box plot of the specified column
fig, ax = plt.subplots()
boxplot = ax.boxplot(target)

# Set the title and labels for the plot
ax.set_title("Box Plot of Property Evaluation")
ax.set_xlabel("X-axis label")
ax.set_ylabel("Y-axis label")

# Customize the outlier marker style and color
outlier_marker = dict(marker='o', markerfacecolor='red', markersize=8, linestyle='none')

# Highlight outliers by changing their marker style and color
for flier in boxplot['fliers']:
    flier.set(**outlier_marker)

# Display the plot
plt.show()


#From output it is clear that there are no outliers

ca2

ca2.state.unique()

#Note that in state columns values are not consistent
# In the state columns values are not consistent
stateMap = {'New South Wales': 'NSW', 'Victoria': 'VIC', 'VIC': 'VIC', 'NSW': 'NSW'}
ca2['state'] = ca2['state'].map(stateMap)

#CLEANED CUSTOMER ADDRESS DATA SET
customeraddress=ca2.copy()
customeraddress

"""DATA CLEANING OF CUSTOMER DEMOGRAPHICS"""

cd

#Customer_id column is unneccessary so we drop it.
cd=cd.drop(columns='customer_id')

cd

#finding all unique values of gender column
cd.gender.unique()

#Creating a copy of data into another variable just for brevity
cd2=cd.copy()

# In the gender columns values are not consistent
genderMap = {'Male': 'M', 'Female': 'F', 'F': 'F', 'femal': 'F','M':'M'}
cd2['gender'] = cd2['gender'].map(genderMap)

cd2

#Dropping the defualt column
cd2=cd2.drop(columns='default')

cd2

#Checking column names to make ammendments in weird column name
cd2.columns

#I believe the column name 'past_3_years_bike_related_purchases' is weird so I will change this.
cd2=cd2.rename(columns={'past_3_years_bike_related_purchases': 'BikePurchases'})
cd2

#Checking for null values of data
cd2.isnull().sum()
#Output shows that there are null values

#Dropping null values
cd2=cd2.dropna()

#Rechechking of null values
cd2.isnull().sum()

#Checking duplicate data
cd2.duplicated().sum()
#Output shows that there is no null value

#Entries in gender column are incosistent
genderMap = {'Male': 'M', 'Female': 'F', 'F': 'F', 'femal': 'F','M':'M'}
cd2['gender'] = cd2['gender'].map(genderMap)

cd2

# Check for outliers
target2= cd2['tenure']

# Create a box plot of the specified column
fig, ax = plt.subplots()
boxplot = ax.boxplot(target2)

# Set the title and labels for the plot
ax.set_title("Tenure")

# Customize the outlier marker style and color
outlier_marker = dict(marker='o', markerfacecolor='red', markersize=8, linestyle='none')

# Highlight outliers by changing their marker style and color
for flier in boxplot['fliers']:
    flier.set(**outlier_marker)

# Display the plot
plt.show()


#From output it is clear that there are no outliers

#CLEANED CUSTOMER ADDRESS DATA SET
customerdemographics=cd2.copy()
customerdemographics



"""DATA CLEANING OF TRANSACTIONS DATA SET
---


"""

ad

ad2=ad.copy()

#dropping transaction_id column
ad2=ad2.drop(columns=['transaction_id'])

ad2

#dropping null value
ad2=ad2.dropna()

#checking foor duplictae values
ad2.duplicated().sum()

# Convert the column 'product_first_sold_date' from float to integer
ad2['product_first_sold_date'] = ad2['product_first_sold_date'].astype(int)

ad2

#making new variable for changing date format
ad6=ad2.copy()

#correcting 'product_first_sold_date' date format
ad6['product_first_sold_date'] = pd.to_datetime(ad6['product_first_sold_date'], origin='1899-12-30', unit='D')
ad6['product_first_sold_date'] = ad6['product_first_sold_date'].dt.strftime('%d/%m/%Y')

ad6

# Check for outliers
target3= ad6['standard_cost']

# Create a box plot of the specified column
fig, ax = plt.subplots()
boxplot = ax.boxplot(target2)

# Set the title and labels for the plot
ax.set_title("Standard Cost")

# Customize the outlier marker style and color
outlier_marker = dict(marker='o', markerfacecolor='red', markersize=8, linestyle='none')

# Highlight outliers by changing their marker style and color
for flier in boxplot['fliers']:
    flier.set(**outlier_marker)

# Display the plot
plt.show()


#From output it is clear that there are no outliers

# Check for outliers
target4= ad6['list_price']

# Create a box plot of the specified column
fig, ax = plt.subplots()
boxplot = ax.boxplot(target2)

# Set the title and labels for the plot
ax.set_title("List Price")

# Customize the outlier marker style and color
outlier_marker = dict(marker='o', markerfacecolor='red', markersize=8, linestyle='none')

# Highlight outliers by changing their marker style and color
for flier in boxplot['fliers']:
    flier.set(**outlier_marker)

# Display the plot
plt.show()


#From output it is clear that there are no outliers

#cleaned transactions data set
transactions=ad6.copy()
transactions

"""ALL FILES AFTER DATA CLEANING"""

customeraddress

customerdemographics

transactions

